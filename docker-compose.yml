version: '3'
services:
#----- API Gatway ---------
  nginx:
   image: 'nginx:alpine'
   container_name: 'api_gateway'
   depends_on:
      - api_customer
      - api_book
      - api_blog
      - api_automation
   volumes:
      - ./gateway/default.conf:/etc/nginx/conf.d/default.conf
      - ./gateway/index.html:/usr/share/nginx/html/index.html
   ports:
      - '80:80'
   networks:
      - proxy
#----- REST API Customer powered by Node.js
  api_customer:    
    container_name: 'api_customer'
    build: 
      context: ./customer/
    image: api_customer:latest
    ports:
      - '8000:8000'
    networks:
      - proxy
#----- REST API Book powered by Golang
  api_book: # Golang REST service
    container_name: 'api_book'    
    build: 
      context: ./book/api_book/api/
    image: api_book:latest
    depends_on: 
      - go_db
    ports: 
      - '8001:8001' 
    networks:
      - proxy
      - db
#----- Postgresql DB is used by REST API Book
  go_db: 
    image: 'postgres:alpine' 
    container_name: 'go_db' 
    ports: 
      - '5432' 
    environment: 
      - POSTGRES_USER=docker 
      - POSTGRES_PASSWORD=docker 
    networks: 
      - db
#----- REST API Blog powered by ASP.net MVC Core
  api_blog:
    container_name: 'api_blog'
    build: 
      context: ./blog/   
    image: api_blog:latest
    depends_on:
      - mssqlserver
    ports:
      - '8002:8002'
    networks:
      - proxy
      - db
#----- SQLServer DB is used by REST API api_blog
  mssqlserver:
    container_name: sqlserver
    image: microsoft/mssql-server-linux:2017-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=SA123456!
    ports:
      - "1433:1433"
    logging:
      options:
        max-size: 1m
    networks: 
      - db
#----- REST API powered by Python
  api_automation:
    container_name: 'api_automation'
    build: 
      context: ./automation/   
    image: api_automation:latest
    #depends_on:
    # - mssqlserver
    ports:
      - '8003:8003'
    networks:
      - proxy
#----- Define networks
networks:
  proxy:
  db: